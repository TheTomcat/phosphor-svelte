@use "sass:map";
// default: black bg, blue/white fg

$themes: (
  bluewhite: (
    foreground: 212 249 250,
    background: 0 12 12,
    alert: 255 60 0,
    warn: 255 200 0,
    ok: 0 200 0
  ),
  amber: (
    foreground: 255 179 37,
    background: 19 6 4,
    alert: 150 35 0,
    warn: 129 58 0,
    ok: 0 100 0
  ),
  green: (
    foreground: 39 177 21,
    background: 0 2 0,
    alert: 255 60 0,
    warn: 129 58 0,
    ok: 0 100 0
  ),
  white: (
    foreground: 218 218 218,
    background: 2 2 2,
    alert: 255 60 0,
    warn: 129 58 0,
    ok: 0 100 0
  )
);

@mixin theme-vars($t) {
    // base colors as channels
    --foreground: #{map.get($t, foreground)};
    --background: #{map.get($t, background)};
    --alert: #{map.get($t, alert)};
    --warn: #{map.get($t, warn)};
    --ok: #{map.get($t, ok)};
  
    /* derived vars using modern rgb() with slash alpha */
    --scanlines-foreground: rgb(var(--foreground) / 0.10);
    --scanlines-background: rgb(var(--background) / 0.50);
  
    --foreground-glow: 0 0 5px rgb(var(--foreground) / 0.50);
    --background-glow: 0 0 2px rgb(var(--background) / 0.50);
    --foreground-disabled: rgb(var(--foreground) / 0.25);
    --alert-glow: 0 0 5px rgb(var(--alert) / 0.50);
    --warn-glow: 0 0 5px rgb(var(--warn) / 0.50);
    --ok-glow: 0 0 5px rgb(var(--ok) / 0.50);
  
    --background-gradient: radial-gradient(
      rgb(var(--foreground) / 0.15),
      rgb(var(--background) / 1) 100%
    );
  }

  :root {
    @include theme-vars(map.get($themes, green));
  }
  
  // Generate scopes for each theme, e.g. <html data-theme="green">
  @each $name, $vals in $themes {
    :root[data-theme="#{'' + $name}"], [data-theme="#{'' + $name}"] {
      @include theme-vars($vals);
    }
  }

  .theme-root {
    
  min-height: 100dvh;
  color: rgb(var(--foreground));
  background: rgb(var(--background));
  background-image: var(--background-gradient);
  }

  // TODO: add theme mixins
// blue/white
// $foreground: rgb(212, 249, 250);
// $background: rgb(0, 12, 12);
// $alert: rgb(255, 60, 0);
// $warn: rgb(255,200,0);
// $ok: rgb(0, 200, 0);

// amber
// $foreground: rgb(255, 179, 37); // 227 157 14
// $background: rgb(19, 6, 4);
// $alert: rgb(150, 35, 0);
// $warn: rgb(129, 58, 0);
// $ok: rgb(0, 100, 0);

// green
// $foreground: rgb(39, 177, 21);
// $background: rgb(0, 2, 0);
// $alert: rgb(255, 60, 0);
// $warn: rgb(129, 58, 0);
// $ok: rgb(0, 100, 0);

// white
// $foreground: rgb(218, 218, 218);
// $background: rgb(2, 2, 2);
// $alert: rgb(255, 60, 0);
// $warn: rgb(129, 58, 0);
// $ok: rgb(0, 100, 0);

// $scanlines-foreground: rgba($foreground, 0.1);
// $scanlines-background: rgba($background, 0.5);

// $foreground-glow: 0 0 5px rgba($foreground, 0.5);
// $background-glow: 0 0 2px rgba($background, 0.5);
// $foreground-disabled: rgba($foreground, 0.25);
// $alert-glow: 0 0 5px rgba($alert, 0.5);
// $warn-glow: 0 0 5px rgba($warn, 0.5);
// $ok-glow: 0 0 5px rgba($ok, 0.5);

// $background-gradient: radial-gradient(rgba($foreground, 0.15), rgba($background, 1) 100%)